<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.apache.pig</groupId>
    <artifactId>pig-parent</artifactId>
    <version>0.18.0-SNAPSHOT</version>
  </parent>
  <artifactId>pig-core</artifactId>
  <name>Apache Pig: Pig core</name>

  <url>http://maven.apache.org</url>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>pig-bzip2</artifactId>
      <version>${project.version}</version>
    </dependency>

    <!--FIXME: This is nasty. We need the TESTS jar from hadoop because we use the JarFinder class from it.-->
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-common</artifactId>
      <version>${hadoop-common.version}</version>
      <classifier>tests</classifier>
    </dependency>

  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.antlr</groupId>
        <artifactId>antlr3-maven-plugin</artifactId>
        <version>${antlr.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>antlr</goal>
            </goals>
          </execution>
        </executions>
      </plugin>


      <!-- Some jars must be present locally for testing purposes -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.1.1</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem><groupId>org.apache.tez</groupId><artifactId>tez-common</artifactId><version>${tez.version}</version></artifactItem>
                <artifactItem><groupId>org.apache.tez</groupId><artifactId>tez-api</artifactId><version>${tez.version}</version></artifactItem>
                <artifactItem><groupId>org.apache.tez</groupId><artifactId>tez-dag</artifactId><version>${tez.version}</version></artifactItem>
                <artifactItem><groupId>org.apache.tez</groupId><artifactId>tez-runtime-internals</artifactId><version>${tez.version}</version></artifactItem>
                <artifactItem><groupId>org.apache.tez</groupId><artifactId>tez-runtime-library</artifactId><version>${tez.version}</version></artifactItem>
                <artifactItem><groupId>org.apache.tez</groupId><artifactId>tez-mapreduce</artifactId><version>${tez.version}</version></artifactItem>
                <artifactItem><groupId>org.apache.tez</groupId><artifactId>tez-yarn-timeline-history-with-acls</artifactId><version>${tez.version}</version></artifactItem>
              </artifactItems>
              <outputDirectory>${project.build.directory}/ivy/lib/Pig</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.12</version>
        <executions>
          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-sources/antlr3</source>
                <source>${project.build.directory}/generated-sources/javacc</source>
              </sources>
            </configuration>
          </execution>
          <execution>
            <id>add-test-source</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/test-generated-sources/javacc</source>
                <source>${project.build.directory}/test-generated-sources/jjtree</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.2</version>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>javacc-maven-plugin</artifactId>
        <version>2.6</version>
        <executions>
          <execution>
            <id>javacc</id>
            <goals>
              <goal>javacc</goal>
            </goals>
          </execution>
          <execution>
            <id>test</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>jjtree-javacc</goal>
            </goals>
            <configuration>
              <sourceDirectory>src/test/javacc</sourceDirectory>
              <interimDirectory>${project.build.directory}/test-generated-sources/jjtree</interimDirectory>
              <outputDirectory>${project.build.directory}/test-generated-sources/javacc</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <descriptors>
            <descriptor>src/main/assembly/0.10.0.xml</descriptor>
          </descriptors>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
