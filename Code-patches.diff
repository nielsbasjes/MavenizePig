diff --git core/src/test/java/org/apache/pig/test/MiniGenericCluster.java core/src/test/java/org/apache/pig/test/MiniGenericCluster.java
index 674860f..925d71c 100644
--- core/src/test/java/org/apache/pig/test/MiniGenericCluster.java
+++ core/src/test/java/org/apache/pig/test/MiniGenericCluster.java
@@ -26,6 +26,7 @@ import org.apache.hadoop.hdfs.MiniDFSCluster;
 import org.apache.pig.ExecType;
 import org.apache.pig.backend.hadoop.datastorage.ConfigurationUtil;
 import org.apache.pig.backend.hadoop.executionengine.Launcher;
+import org.apache.pig.tools.pigstats.ScriptState;
 
 /**
  * This class builds a single instance of itself with the Singleton
@@ -44,11 +45,26 @@ abstract public class MiniGenericCluster {
     protected Configuration m_conf = null;
 
     protected static MiniGenericCluster INSTANCE = null;
-    protected static boolean isSetup = false;
 
-    public static String EXECTYPE_MR = "mr";
-    public static String EXECTYPE_TEZ = "tez";
-    public static String EXECTYPE_SPARK = "spark";
+    public static final String EXECTYPE_MR = "mr";
+    public static final String EXECTYPE_TEZ = "tez";
+    public static final String EXECTYPE_SPARK = "spark";
+
+    public static MiniGenericCluster initializeMiniCluster(String execType)  {
+        System.setProperty("test.exec.type", execType);
+        return buildCluster(execType);
+    }
+
+    private static String desiredExecType() {
+        String execType = System.getProperty("test.exec.type");
+        if (execType == null) {
+            execType = EXECTYPE_MR;
+            System.setProperty("test.exec.type", EXECTYPE_MR);
+        } else {
+            execType = execType.toLowerCase();
+        }
+        return execType;
+    }
 
     /**
      * Returns the single instance of class MiniGenericCluster that represents
@@ -57,34 +73,37 @@ abstract public class MiniGenericCluster {
      * cluster will be returned.
      */
     public static MiniGenericCluster buildCluster() {
-        if (INSTANCE == null) {
-            String execType = System.getProperty("test.exec.type");
-            if (execType == null) {
-                // Default to MR
-                System.setProperty("test.exec.type", EXECTYPE_MR);
-                return buildCluster(EXECTYPE_MR);
-            }
-
-            return buildCluster(execType);
-        }
-        return INSTANCE;
+        return buildCluster(desiredExecType());
     }
 
     public static MiniGenericCluster buildCluster(String execType) {
-        if (INSTANCE == null) {
-            if (execType.equalsIgnoreCase(EXECTYPE_MR)) {
-                INSTANCE = new MiniCluster();
-            } else if (execType.equalsIgnoreCase(EXECTYPE_TEZ)) {
-                INSTANCE = new TezMiniCluster();
-            } else if (execType.equalsIgnoreCase(EXECTYPE_SPARK)) {
-                INSTANCE = new SparkMiniCluster();
-            } else {
-                throw new RuntimeException("Unknown test.exec.type: " + execType);
+        if (INSTANCE != null) {
+            String instanceExecType = INSTANCE.getExecType().name();
+            if (!instanceExecType.equalsIgnoreCase(execType)){
+                INSTANCE.shutdownMiniDfsAndMrClusters();
+                INSTANCE = null;
             }
         }
-        if (!isSetup) {
+        if (INSTANCE == null) {
+            System.err.println("XXXXXXXXXXXXXX Creating new TEST cluster:" + execType);
+
+            // Force the script state to be reinitialized
+            ScriptState.start(null);
+
+            switch (execType) {
+                case EXECTYPE_MR:
+                    INSTANCE = new MiniCluster();
+                    break;
+                case EXECTYPE_TEZ:
+                    INSTANCE = new TezMiniCluster();
+                    break;
+                case EXECTYPE_SPARK:
+                    INSTANCE = new SparkMiniCluster();
+                    break;
+                default:
+                    throw new RuntimeException("Unknown test.exec.type: " + execType);
+            }
             INSTANCE.setupMiniDfsAndMrClusters();
-            isSetup = true;
         }
         return INSTANCE;
     }
@@ -103,7 +122,6 @@ abstract public class MiniGenericCluster {
     }
 
     protected void shutdownMiniDfsAndMrClusters() {
-        isSetup = false;
         shutdownMiniDfsClusters();
         shutdownMiniMrClusters();
         m_conf = null;
@@ -145,25 +163,23 @@ abstract public class MiniGenericCluster {
      * Throw RunTimeException if isSetup is false
      */
     private void errorIfNotSetup(){
-        if(isSetup)
-            return;
-        String msg = "function called on MiniCluster that has been shutdown";
-        throw new RuntimeException(msg);
+        if(INSTANCE == null) {
+            String msg = "function called on MiniCluster that has been shutdown";
+            throw new RuntimeException(msg);
+        }
     }
 
     static public Launcher getLauncher() {
-        String execType = System.getProperty("test.exec.type");
-        if (execType == null) {
-            System.setProperty("test.exec.type", EXECTYPE_MR);
-        }
-        if (execType.equalsIgnoreCase(EXECTYPE_MR)) {
-            return MiniCluster.getLauncher();
-        } else if (execType.equalsIgnoreCase(EXECTYPE_TEZ)) {
-            return TezMiniCluster.getLauncher();
-        } else if(execType.equalsIgnoreCase(EXECTYPE_SPARK)){
-            return SparkMiniCluster.getLauncher();
-        } else{
-            throw new RuntimeException("Unknown test.exec.type: " + execType);
+        String execType = desiredExecType();
+        switch (execType) {
+            case EXECTYPE_MR:
+                return MiniCluster.getLauncher();
+            case EXECTYPE_TEZ:
+                return TezMiniCluster.getLauncher();
+            case EXECTYPE_SPARK:
+                return SparkMiniCluster.getLauncher();
+            default:
+                throw new RuntimeException("Unknown test.exec.type: " + execType);
         }
     }
 }
diff --git core/src/test/java/org/apache/pig/test/TestPigStats.java core/src/test/java/org/apache/pig/test/TestPigStats.java
index 2cea713..fca54e9 100644
--- core/src/test/java/org/apache/pig/test/TestPigStats.java
+++ core/src/test/java/org/apache/pig/test/TestPigStats.java
@@ -30,6 +30,7 @@ import org.apache.commons.io.FileUtils;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.apache.hadoop.conf.Configuration;
+import org.apache.pig.ExecType;
 import org.apache.pig.PigServer;
 import org.apache.pig.backend.executionengine.ExecJob;
 import org.apache.pig.backend.hadoop.executionengine.HExecutionEngine;
@@ -38,6 +39,8 @@ import org.apache.pig.impl.PigContext;
 import org.apache.pig.impl.util.ObjectSerializer;
 import org.apache.pig.newplan.logical.relational.LogicalPlan;
 import org.apache.pig.tools.pigstats.PigStats;
+import org.junit.Before;
+import org.junit.BeforeClass;
 import org.junit.Ignore;
 import org.junit.Test;
 
diff --git core/src/test/java/org/apache/pig/test/TestPigStatsMR.java core/src/test/java/org/apache/pig/test/TestPigStatsMR.java
index 7dc0135..07391bd 100644
--- core/src/test/java/org/apache/pig/test/TestPigStatsMR.java
+++ core/src/test/java/org/apache/pig/test/TestPigStatsMR.java
@@ -17,6 +17,8 @@
  */
 package org.apache.pig.test;
 
+import static org.apache.pig.test.MiniGenericCluster.EXECTYPE_MR;
+import static org.apache.pig.test.MiniGenericCluster.EXECTYPE_TEZ;
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.fail;
 
@@ -39,9 +41,15 @@ import org.apache.pig.tools.pigstats.PigStats;
 import org.apache.pig.tools.pigstats.PigStats.JobGraph;
 import org.apache.pig.tools.pigstats.ScriptState;
 import org.apache.pig.tools.pigstats.mapreduce.MRScriptState;
+import org.junit.Before;
+import org.junit.BeforeClass;
 import org.junit.Test;
 
 public class TestPigStatsMR extends TestPigStats {
+    @BeforeClass
+    public static void ensureRightTestCluster(){
+        MiniGenericCluster.initializeMiniCluster(EXECTYPE_MR);
+    }
 
     @Override
     @Test
diff --git core/src/test/java/org/apache/pig/tez/TestPigStatsTez.java core/src/test/java/org/apache/pig/tez/TestPigStatsTez.java
index f0a9da8..5cb0462 100644
--- core/src/test/java/org/apache/pig/tez/TestPigStatsTez.java
+++ core/src/test/java/org/apache/pig/tez/TestPigStatsTez.java
@@ -17,6 +17,7 @@
  */
 package org.apache.pig.tez;
 
+import static org.apache.pig.test.MiniGenericCluster.EXECTYPE_TEZ;
 import static org.junit.Assert.assertEquals;
 
 import java.io.File;
@@ -31,13 +32,22 @@ import org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator;
 import org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPlanContainer;
 import org.apache.pig.backend.hadoop.executionengine.tez.plan.TezPlanContainerNode;
 import org.apache.pig.impl.PigContext;
+import org.apache.pig.test.MiniGenericCluster;
 import org.apache.pig.test.TestPigStats;
 import org.apache.pig.tools.pigstats.PigStats.JobGraph;
 import org.apache.pig.tools.pigstats.tez.TezPigScriptStats;
 import org.apache.pig.tools.pigstats.tez.TezScriptState;
 import org.apache.pig.tools.pigstats.tez.TezScriptState.TezDAGScriptInfo;
+import org.junit.Before;
+import org.junit.BeforeClass;
 
 public class TestPigStatsTez extends TestPigStats {
+
+    @BeforeClass
+    public static void ensureRightTestCluster(){
+        MiniGenericCluster.initializeMiniCluster(EXECTYPE_TEZ);
+    }
+
     @Override
     public void addSettingsToConf(Configuration conf, String scriptFileName) throws IOException {
         TezScriptState ss = TezScriptState.get();
